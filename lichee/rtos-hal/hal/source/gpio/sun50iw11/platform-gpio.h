/*
* Copyright (c) 2019-2025 Allwinner Technology Co., Ltd. ALL rights reserved.
*
* Allwinner is a trademark of Allwinner Technology Co.,Ltd., registered in
* the the People's Republic of China and other countries.
* All Allwinner Technology Co.,Ltd. trademarks are used with permission.
*
* DISCLAIMER
* THIRD PARTY LICENCES MAY BE REQUIRED TO IMPLEMENT THE SOLUTION/PRODUCT.
* IF YOU NEED TO INTEGRATE THIRD PARTY’S TECHNOLOGY (SONY, DTS, DOLBY, AVS OR MPEGLA, ETC.)
* IN ALLWINNERS’SDK OR PRODUCTS, YOU SHALL BE SOLELY RESPONSIBLE TO OBTAIN
* ALL APPROPRIATELY REQUIRED THIRD PARTY LICENCES.
* ALLWINNER SHALL HAVE NO WARRANTY, INDEMNITY OR OTHER OBLIGATIONS WITH RESPECT TO MATTERS
* COVERED UNDER ANY REQUIRED THIRD PARTY LICENSE.
* YOU ARE SOLELY RESPONSIBLE FOR YOUR USAGE OF THIRD PARTY’S TECHNOLOGY.
*
*
* THIS SOFTWARE IS PROVIDED BY ALLWINNER"AS IS" AND TO THE MAXIMUM EXTENT
* PERMITTED BY LAW, ALLWINNER EXPRESSLY DISCLAIMS ALL WARRANTIES OF ANY KIND,
* WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING WITHOUT LIMITATION REGARDING
* THE TITLE, NON-INFRINGEMENT, ACCURACY, CONDITION, COMPLETENESS, PERFORMANCE
* OR MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
* IN NO EVENT SHALL ALLWINNER BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
* LOSS OF USE, DATA, OR PROFITS, OR BUSINESS INTERRUPTION)
* HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
* STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
* OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#ifndef __PLATFORM_GPIO_H__
#define __PLATFORM_GPIO_H__

#ifdef __cplusplus
extern "C" {
#endif

#define GPIO_MAX_BANK PN_BASE
#define BANK_BOUNDARY PL_BASE
#define SUNXI_GPIO_R_PBASE 0x07022000

#if defined(CONFIG_DRIVERS_INTC)
#define SUNXI_IRQ_R_GPIOL	(RINTC_IRQ_MASK | 6)
#define SUNXI_IRQ_R_GPIOM	(RINTC_IRQ_MASK | 7)
#define SUNXI_IRQ_R_GPION	(RINTC_IRQ_MASK | 8)
#endif

typedef enum
{
    GPIO_PL0 = GPIOL(0),
    GPIO_PL1 = GPIOL(1),
    GPIO_PL2 = GPIOL(2),
    GPIO_PL3 = GPIOL(3),
    GPIO_PL4 = GPIOL(4),
    GPIO_PL5 = GPIOL(5),
    GPIO_PL6 = GPIOL(6),
    GPIO_PL7 = GPIOL(7),
    GPIO_PL8 = GPIOL(8),
    GPIO_PL9 = GPIOL(9),
    GPIO_PL10 = GPIOL(10),

    GPIO_PM0 = GPIOM(0),
    GPIO_PM1 = GPIOM(1),
    GPIO_PM2 = GPIOM(2),
    GPIO_PM3 = GPIOM(3),
    GPIO_PM4 = GPIOM(4),
    GPIO_PM5 = GPIOM(5),
    GPIO_PM6 = GPIOM(6),
    GPIO_PM7 = GPIOM(7),
    GPIO_PM8 = GPIOM(8),

    GPIO_PN0 = GPION(0),
    GPIO_PN1 = GPION(1),
    GPIO_PN2 = GPION(2),
    GPIO_PN3 = GPION(3),
    GPIO_PN4 = GPION(4),
    GPIO_PN5 = GPION(5),
    GPIO_PN6 = GPION(6),
    GPIO_PN7 = GPION(7),
    GPIO_PN8 = GPION(8),
    GPIO_PN9 = GPION(9),
    GPIO_PN10 = GPION(10),
    GPIO_PN11 = GPION(11),
    GPIO_PN12 = GPION(12),
    GPIO_PN13 = GPION(13),
    GPIO_PN14 = GPION(14),
    GPIO_PN15 = GPION(15),
    GPIO_PN16 = GPION(16),
    GPIO_PN17 = GPION(17),
    GPIO_PN18 = GPION(18),
    GPIO_PN19 = GPION(19),
    GPIO_PN20 = GPION(20),
    GPIO_PN21 = GPION(21),
    GPIO_PN22 = GPION(22),
    GPIO_PN23 = GPION(23),

} gpio_pin_t;

#ifdef __cplusplus
}
#endif
#endif /* __PLATFORM_GPIO_H__ */
