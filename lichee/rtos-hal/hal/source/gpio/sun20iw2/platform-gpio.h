/*
* Copyright (c) 2019-2025 Allwinner Technology Co., Ltd. ALL rights reserved.
*
* Allwinner is a trademark of Allwinner Technology Co.,Ltd., registered in
* the the People's Republic of China and other countries.
* All Allwinner Technology Co.,Ltd. trademarks are used with permission.
*
* DISCLAIMER
* THIRD PARTY LICENCES MAY BE REQUIRED TO IMPLEMENT THE SOLUTION/PRODUCT.
* IF YOU NEED TO INTEGRATE THIRD PARTY’S TECHNOLOGY (SONY, DTS, DOLBY, AVS OR MPEGLA, ETC.)
* IN ALLWINNERS’SDK OR PRODUCTS, YOU SHALL BE SOLELY RESPONSIBLE TO OBTAIN
* ALL APPROPRIATELY REQUIRED THIRD PARTY LICENCES.
* ALLWINNER SHALL HAVE NO WARRANTY, INDEMNITY OR OTHER OBLIGATIONS WITH RESPECT TO MATTERS
* COVERED UNDER ANY REQUIRED THIRD PARTY LICENSE.
* YOU ARE SOLELY RESPONSIBLE FOR YOUR USAGE OF THIRD PARTY’S TECHNOLOGY.
*
*
* THIS SOFTWARE IS PROVIDED BY ALLWINNER"AS IS" AND TO THE MAXIMUM EXTENT
* PERMITTED BY LAW, ALLWINNER EXPRESSLY DISCLAIMS ALL WARRANTIES OF ANY KIND,
* WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING WITHOUT LIMITATION REGARDING
* THE TITLE, NON-INFRINGEMENT, ACCURACY, CONDITION, COMPLETENESS, PERFORMANCE
* OR MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
* IN NO EVENT SHALL ALLWINNER BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
* LOSS OF USE, DATA, OR PROFITS, OR BUSINESS INTERRUPTION)
* HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
* STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
* OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#ifndef __PLATFORM_GPIO_H__
#define __PLATFORM_GPIO_H__

#ifdef __cplusplus
extern "C" {
#endif

#define GPIO_MAX_BANK PL_BASE
#define BANK_BOUNDARY PL_BASE
#define SUNXI_GPIO_PBASE 0x4004A400

/* sunxi gpio irq*/
#if defined(CONFIG_ARCH_RISCV_C906)
#define SUNXI_IRQ_GPIOA                (131)
#define SUNXI_IRQ_GPIOB                (132)
#define SUNXI_IRQ_GPIOC                (133)
#elif defined(CONFIG_ARCH_DSP)

#include <interrupt.h>

#define SUNXI_IRQ_GPIOA                (RINTC_IRQ_MASK | 116)
#define SUNXI_IRQ_GPIOB                (RINTC_IRQ_MASK | 117)
#define SUNXI_IRQ_GPIOC                (RINTC_IRQ_MASK | 118)
#else
#define SUNXI_IRQ_GPIOA                (115)
#define SUNXI_IRQ_GPIOB                (116)
#define SUNXI_IRQ_GPIOC                (117)
#endif

typedef enum
{
    GPIO_PA0 = GPIOA(0),
    GPIO_PA1 = GPIOA(1),
    GPIO_PA2 = GPIOA(2),
    GPIO_PA3 = GPIOA(3),
    GPIO_PA4 = GPIOA(4),
    GPIO_PA5 = GPIOA(5),
    GPIO_PA6 = GPIOA(6),
    GPIO_PA7 = GPIOA(7),
    GPIO_PA8 = GPIOA(8),
    GPIO_PA9 = GPIOA(9),
    GPIO_PA10 = GPIOA(10),
    GPIO_PA11 = GPIOA(11),
    GPIO_PA12 = GPIOA(12),
    GPIO_PA13 = GPIOA(13),
    GPIO_PA14 = GPIOA(14),
    GPIO_PA15 = GPIOA(15),
    GPIO_PA16 = GPIOA(16),
    GPIO_PA17 = GPIOA(17),
    GPIO_PA18 = GPIOA(18),
    GPIO_PA19 = GPIOA(19),
    GPIO_PA20 = GPIOA(20),
    GPIO_PA21 = GPIOA(21),
    GPIO_PA22 = GPIOA(22),
    GPIO_PA23 = GPIOA(23),
    GPIO_PA24 = GPIOA(24),
    GPIO_PA25 = GPIOA(25),
    GPIO_PA26 = GPIOA(26),
    GPIO_PA27 = GPIOA(27),
    GPIO_PA28 = GPIOA(28),
    GPIO_PA29 = GPIOA(29),

    GPIO_PB0 = GPIOB(0),
    GPIO_PB1 = GPIOB(1),
    GPIO_PB2 = GPIOB(2),
    GPIO_PB3 = GPIOB(3),
    GPIO_PB4 = GPIOB(4),
    GPIO_PB5 = GPIOB(5),
    GPIO_PB6 = GPIOB(6),
    GPIO_PB7 = GPIOB(7),
    GPIO_PB8 = GPIOB(8),
    GPIO_PB9 = GPIOB(9),
    GPIO_PB10 = GPIOB(10),
    GPIO_PB11 = GPIOB(11),
    GPIO_PB12 = GPIOB(12),
    GPIO_PB13 = GPIOB(13),
    GPIO_PB14 = GPIOB(14),
    GPIO_PB15 = GPIOB(15),

    GPIO_PC0 = GPIOC(0),
    GPIO_PC1 = GPIOC(1),
    GPIO_PC2 = GPIOC(2),
    GPIO_PC3 = GPIOC(3),
    GPIO_PC4 = GPIOC(4),
    GPIO_PC5 = GPIOC(5),
    GPIO_PC6 = GPIOC(6),
    GPIO_PC7 = GPIOC(7),
    GPIO_PC8 = GPIOC(8),
    GPIO_PC9 = GPIOC(9),
    GPIO_PC10 = GPIOC(10),
    GPIO_PC11 = GPIOC(11),
    GPIO_PC12 = GPIOC(12),
#ifdef CONFIG_DRIVERS_GPIO_EX_AW9523
    GPIO_EXP00 = GPIOEXP0(0),
    GPIO_EXP01 = GPIOEXP0(1),
    GPIO_EXP02 = GPIOEXP0(2),
    GPIO_EXP03 = GPIOEXP0(3),
    GPIO_EXP04 = GPIOEXP0(4),
    GPIO_EXP05 = GPIOEXP0(5),
    GPIO_EXP06 = GPIOEXP0(6),
    GPIO_EXP07 = GPIOEXP0(7),
    GPIO_EXP10 = GPIOEXP1(0),
    GPIO_EXP11 = GPIOEXP1(1),
    GPIO_EXP12 = GPIOEXP1(2),
    GPIO_EXP13 = GPIOEXP1(3),
    GPIO_EXP14 = GPIOEXP1(4),
    GPIO_EXP15 = GPIOEXP1(5),
    GPIO_EXP16 = GPIOEXP1(6),
    GPIO_EXP17 = GPIOEXP1(7),
#endif
} gpio_pin_t;

#ifdef __cplusplus
}
#endif
#endif /* __PLATFORM_GPIO_H__ */
