/* SPDX-License-Identifier: GPL-2.0+ */
/*
 * (C) Copyright 2015
 * Kamil Lulko, <kamil.lulko@gmail.com>
 */

#include <asm/assembler.h>
#include <asm/armv8m.h>

.globl	reset
.type reset, %function
reset:
	#mov	pc, lr
	bl	armv8m_interrupt_init
	bl	lowlevel_init
	bl	_main

.globl	c_runtime_cpu_setup
c_runtime_cpu_setup:
	mov	pc, lr

.globl	armv8m_interrupt_init
armv8m_interrupt_init:
	cpsid	i
	/* set vector table address */
	ldr	r0, =_start
	ldr	r1, =V8M_SCB_BASE
	str	r0, [r1, V8M_SCB_VTOR]

	/* set DIV_0_TRP bit */
	ldr	r0, [r1, V8M_SCB_CCR]
	orr	r0, #0x10
	str	r0, [r1, V8M_SCB_CCR]

	/* set USGFAULTENA, BUSFAULTENA, MEMFAULTENA bit */
	ldr	r0, [r1, V8M_SCB_SHCSR]
	orr	r0, #0x00070000
	str	r0, [r1, V8M_SCB_SHCSR]

	/* set system handler priority to 0 */
	mov	r0, #0
	str	r0, [r1, V8M_SCB_SHPR1]
	str	r0, [r1, V8M_SCB_SHPR2]
	str	r0, [r1, V8M_SCB_SHPR3]

	/* disable all external interrupt generated by NVIC */
	ldr	r1, =V8M_NVIC_BASE
	add	r1, r1, V8M_NVIC_ICER
	mvn	r0, #0
	mov	r2, #0
disable_int_loop:
	str	r0, [r1]
	add	r1, r1, #4
	add	r2, #1
	cmp	r2, #16
	blo	disable_int_loop

	cpsie	i
	mov	pc, lr