/*
 * mkimage configuration:
 *	magic: image header magic, AWIH
 *	hversion: image header version
 *	pversion: payload version
 *	key_type: crypto type of packing and verity
 * 	image: image size configuration
 * 		- max_size: firmware max size
 * 		- bin_num: max binary number in firmware
 * 	section: binary list
 * 		- id: binary file id
 * 		- bin: binary file name
 * 		- flash_offs: the offset of the binary in flash. if not set, it will put the binary at the end of previous binary (1024B align).
 * 		- sram_offs: the sram offset which the binary will be loaded to.
 * 		- ep: entry point
 * 		- attr: attribute
 * 			- bit[1:0]: file type, 00 - normal, 01 - executable, 10 - XIP, 11 - reserved.
 * 			- bit[3:2]: encrypt type, 00 - none, X1 - signature, 1X - flash encryptiion
 * 			- bit[4]: compress flag, 0 - none, 1 - compressed
 * 			- bit[5]: secure flag, 0 - none, 1 - secure
 * 			- bit[6]: storage data flag, 0 - none, 1 - has storage data at the end
 * 			- bit[7]: reserved
 * 			- bit[8]: gz flag, 0 - none, 1 - gzip
 * 			- bit[31:9]: reserved
 */

#define S(str) _S(str)
#define _S(str) #str

#if ARM_TFM
#define ATTR_SBOOT	0x65
#define ATTR_S_EXE	0x25
#define ATTR_EXE	0x05
#define ATTR_GZIP_EXE	0x105
#define ATTR_XIP	0x06
#define SIGN_RootKey	RootKey
#define SIGN_TFKey	TFKey
#define SIGN_SoCFKey	SoCFKey
#define SIGN_NonTFKey	NonTFKey
#define SIGN_DebugKey	DebugKey
#else
#define ATTR_EXE	0x01
#define ATTR_GZIP_EXE	0x101
#define ATTR_XIP	0x02
#define SIGN_RootKey
#define SIGN_TFKey
#define SIGN_SoCFKey
#define SIGN_NonTFKey
#define SIGN_DebugKey
#endif

#define SBOOT_LOAD_ADDR	0x40b0000
#define SBOOT_RUN_ADDR	0x40b0080
#define TFM_LOAD_ADDR	0x4000000

#define BOOT0_LOAD_ADDR	0x40b0000
#define BOOT0_RUN_ADDR	0x40b0080

#define ETF_LOAD_ADDR	0x08004000

{
    "magic" : "AWIH",
    "hversion" : "0.5",
    "pversion" : "0",
    "key_type" : "rsa",
    "image" : {"max_size": "16384K"},
    "section" :
    [
#if ARM_TFM
        {"id": "0xa5f85a07", "bin": "sboot.bin",        "attr": S(ATTR_SBOOT), "sram_offs": S(SBOOT_LOAD_ADDR), "ep": S(SBOOT_RUN_ADDR), "sign_key" : S(SIGN_RootKey)},
        {"id": "0xa5ee5a11", "bin": "rootkey.fex",      "attr": S(ATTR_S_EXE), "sram_offs": "",                 "ep": "",                "sign_key" : S(SIGN_RootKey)},
        {"id": "0xa5ef5a10", "bin": "tfm.fex",          "attr": S(ATTR_S_EXE), "sram_offs": S(TFM_LOAD_ADDR),   "ep": S(TFM_LOAD_ADDR),  "sign_key" : S(SIGN_TFKey)},
#else
        {"id": "0xa5ff5a00", "bin": "boot0_spinor.fex", "attr": S(ATTR_EXE),   "sram_offs": S(BOOT0_LOAD_ADDR), "ep": S(BOOT0_RUN_ADDR), "sign_key" : S(SIGN_RootKey)},
        {"id": "0xa5fd5a02", "bin": "boot0_sdcard.fex", "attr": S(ATTR_EXE),   "sram_offs": S(BOOT0_LOAD_ADDR), "ep": S(BOOT0_RUN_ADDR), "sign_key" : S(SIGN_RootKey)},
#endif
        {"id": "0xa5df5a20", "bin": "rtos_arm.fex",     "attr": S(ATTR_EXE),   "sram_offs": S(ARM_LOAD_ADDR),   "ep": S(ARM_LOAD_ADDR),  "sign_key" : S(SIGN_NonTFKey)},
#if ARM_BOOT_RV
        {"id": "0xa5cf5a30", "bin": "rtos_riscv.fex",   "attr": S(ATTR_EXE),   "sram_offs": S(RV_LOAD_ADDR),    "ep": S(RV_LOAD_ADDR),   "sign_key": S(SIGN_NonTFKey)},
#endif
#if ARM_BOOT_DSP
        {"id": "0xa5bf5a40", "bin": "rtos_dsp.fex",     "attr": S(ATTR_EXE),   "sram_offs": S(DSP_LOAD_ADDR),   "ep": S(DSP_RUN_ADDR),   "sign_key": S(SIGN_NonTFKey)},
#endif
#if ARM_PSRAM
        {"id": "0xa5dd5a22", "bin": "psram_arm.fex",    "attr": S(ATTR_EXE),   "sram_offs": S(ARM_PSRAM_LOAD_ADDR), "ep": S(ARM_PSRAM_LOAD_ADDR), "sign_key" : S(SIGN_NonTFKey)},
#endif
#if ARM_XIP
        {"id": "0xa5de5a21", "bin": "rtos_xip_arm.fex", "attr": S(ATTR_XIP),   "sram_offs": S(ARM_LOAD_ADDR),   "ep": "",                "sign_key" : S(SIGN_NonTFKey)},
#endif
#if RV_XIP
        {"id": "0xa5ce5a31", "bin": "rtos_xip_rv.fex",  "attr": S(ATTR_XIP),   "sram_offs": S(RV_LOAD_ADDR),    "ep": "",                "sign_key" : S(SIGN_NonTFKey)},
#endif
#if ARM_RECOVERY
        {"id": "0xa5af5a50", "bin": "recovery.fex",     "attr": S(ATTR_EXE),   "sram_offs": S(ARM_LOAD_ADDR),   "ep": S(ARM_LOAD_ADDR),  "sign_key" : S(SIGN_NonTFKey)},
#endif
        {"id": "0xa59f5a60", "bin": "etf.fex",          "attr": S(ATTR_EXE),   "sram_offs": S(ETF_LOAD_ADDR),   "ep": S(ETF_LOAD_ADDR),  "sign_key" : S(SIGN_NonTFKey)},
        {}
    ],
    "asyn_keys" :
    [
        {"key": "RootKey"},
        {"key": "TFKey"},
        {"key": "SoCFKey"},
        {"key": "NonTFKey"},
        {"key": "DebugKey"}
    ]
}
